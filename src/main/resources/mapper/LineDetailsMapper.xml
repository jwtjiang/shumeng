<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edas.dao.LineDetailsMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.po.LineDetails">
    <id column="line_id" jdbcType="VARCHAR" property="lineId" />
    <result column="line_name" jdbcType="VARCHAR" property="lineName" />
    <result column="tower_name" jdbcType="VARCHAR" property="towerName" />
    <result column="tower_id" jdbcType="VARCHAR" property="towerId" />
    <result column="parentregion" jdbcType="VARCHAR" property="parentregion" />
    <result column="em_id" jdbcType="INTEGER" property="emId" />
    <result column="pre_id" jdbcType="BIGINT" property="preId" />
    <result column="maintainer" jdbcType="VARCHAR" property="maintainer" />
    <result column="insulation_creep_distance" jdbcType="INTEGER" property="insulationCreepDistance" />
    <result column="insulation_ton" jdbcType="INTEGER" property="insulationTon" />
    <result column="insulation_high" jdbcType="INTEGER" property="insulationHigh" />
    <result column="insulation_bunch_num" jdbcType="INTEGER" property="insulationBunchNum" />
    <result column="resistance_design_value" jdbcType="INTEGER" property="resistanceDesignValue" />
    <result column="stationmap_2" jdbcType="REAL" property="stationmap2" />
    <result column="stationmap_1" jdbcType="REAL" property="stationmap1" />
    <result column="terrain" jdbcType="VARCHAR" property="terrain" />
    <result column="voltage" jdbcType="VARCHAR" property="voltage" />
    <result column="datetime_month" jdbcType="INTEGER" property="datetimeMonth" />
    <result column="datetime" jdbcType="DATE" property="datetime" />
    <result column="line_length" jdbcType="REAL" property="lineLength" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    line_id, line_name, tower_name, tower_id, parentregion, em_id, pre_id, maintainer, 
    insulation_creep_distance, insulation_ton, insulation_high, insulation_bunch_num, 
    resistance_design_value, stationmap_2, stationmap_1, terrain, voltage, datetime_month, 
    datetime, line_length
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from line_details
    where line_id = #{lineId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from line_details
    where line_id = #{lineId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.example.demo.po.LineDetails">
    insert into line_details (line_id, line_name, tower_name, 
      tower_id, parentregion, em_id, 
      pre_id, maintainer, insulation_creep_distance, 
      insulation_ton, insulation_high, insulation_bunch_num, 
      resistance_design_value, stationmap_2, stationmap_1, 
      terrain, voltage, datetime_month, 
      datetime, line_length)
    values (#{lineId,jdbcType=VARCHAR}, #{lineName,jdbcType=VARCHAR}, #{towerName,jdbcType=VARCHAR}, 
      #{towerId,jdbcType=VARCHAR}, #{parentregion,jdbcType=VARCHAR}, #{emId,jdbcType=INTEGER}, 
      #{preId,jdbcType=BIGINT}, #{maintainer,jdbcType=VARCHAR}, #{insulationCreepDistance,jdbcType=INTEGER}, 
      #{insulationTon,jdbcType=INTEGER}, #{insulationHigh,jdbcType=INTEGER}, #{insulationBunchNum,jdbcType=INTEGER}, 
      #{resistanceDesignValue,jdbcType=INTEGER}, #{stationmap2,jdbcType=REAL}, #{stationmap1,jdbcType=REAL}, 
      #{terrain,jdbcType=VARCHAR}, #{voltage,jdbcType=VARCHAR}, #{datetimeMonth,jdbcType=INTEGER}, 
      #{datetime,jdbcType=DATE}, #{lineLength,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.po.LineDetails">
    insert into line_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lineId != null">
        line_id,
      </if>
      <if test="lineName != null">
        line_name,
      </if>
      <if test="towerName != null">
        tower_name,
      </if>
      <if test="towerId != null">
        tower_id,
      </if>
      <if test="parentregion != null">
        parentregion,
      </if>
      <if test="emId != null">
        em_id,
      </if>
      <if test="preId != null">
        pre_id,
      </if>
      <if test="maintainer != null">
        maintainer,
      </if>
      <if test="insulationCreepDistance != null">
        insulation_creep_distance,
      </if>
      <if test="insulationTon != null">
        insulation_ton,
      </if>
      <if test="insulationHigh != null">
        insulation_high,
      </if>
      <if test="insulationBunchNum != null">
        insulation_bunch_num,
      </if>
      <if test="resistanceDesignValue != null">
        resistance_design_value,
      </if>
      <if test="stationmap2 != null">
        stationmap_2,
      </if>
      <if test="stationmap1 != null">
        stationmap_1,
      </if>
      <if test="terrain != null">
        terrain,
      </if>
      <if test="voltage != null">
        voltage,
      </if>
      <if test="datetimeMonth != null">
        datetime_month,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="lineLength != null">
        line_length,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lineId != null">
        #{lineId,jdbcType=VARCHAR},
      </if>
      <if test="lineName != null">
        #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="towerName != null">
        #{towerName,jdbcType=VARCHAR},
      </if>
      <if test="towerId != null">
        #{towerId,jdbcType=VARCHAR},
      </if>
      <if test="parentregion != null">
        #{parentregion,jdbcType=VARCHAR},
      </if>
      <if test="emId != null">
        #{emId,jdbcType=INTEGER},
      </if>
      <if test="preId != null">
        #{preId,jdbcType=BIGINT},
      </if>
      <if test="maintainer != null">
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="insulationCreepDistance != null">
        #{insulationCreepDistance,jdbcType=INTEGER},
      </if>
      <if test="insulationTon != null">
        #{insulationTon,jdbcType=INTEGER},
      </if>
      <if test="insulationHigh != null">
        #{insulationHigh,jdbcType=INTEGER},
      </if>
      <if test="insulationBunchNum != null">
        #{insulationBunchNum,jdbcType=INTEGER},
      </if>
      <if test="resistanceDesignValue != null">
        #{resistanceDesignValue,jdbcType=INTEGER},
      </if>
      <if test="stationmap2 != null">
        #{stationmap2,jdbcType=REAL},
      </if>
      <if test="stationmap1 != null">
        #{stationmap1,jdbcType=REAL},
      </if>
      <if test="terrain != null">
        #{terrain,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="datetimeMonth != null">
        #{datetimeMonth,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=DATE},
      </if>
      <if test="lineLength != null">
        #{lineLength,jdbcType=REAL},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.po.LineDetails">
    update line_details
    <set>
      <if test="lineName != null">
        line_name = #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="towerName != null">
        tower_name = #{towerName,jdbcType=VARCHAR},
      </if>
      <if test="towerId != null">
        tower_id = #{towerId,jdbcType=VARCHAR},
      </if>
      <if test="parentregion != null">
        parentregion = #{parentregion,jdbcType=VARCHAR},
      </if>
      <if test="emId != null">
        em_id = #{emId,jdbcType=INTEGER},
      </if>
      <if test="preId != null">
        pre_id = #{preId,jdbcType=BIGINT},
      </if>
      <if test="maintainer != null">
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="insulationCreepDistance != null">
        insulation_creep_distance = #{insulationCreepDistance,jdbcType=INTEGER},
      </if>
      <if test="insulationTon != null">
        insulation_ton = #{insulationTon,jdbcType=INTEGER},
      </if>
      <if test="insulationHigh != null">
        insulation_high = #{insulationHigh,jdbcType=INTEGER},
      </if>
      <if test="insulationBunchNum != null">
        insulation_bunch_num = #{insulationBunchNum,jdbcType=INTEGER},
      </if>
      <if test="resistanceDesignValue != null">
        resistance_design_value = #{resistanceDesignValue,jdbcType=INTEGER},
      </if>
      <if test="stationmap2 != null">
        stationmap_2 = #{stationmap2,jdbcType=REAL},
      </if>
      <if test="stationmap1 != null">
        stationmap_1 = #{stationmap1,jdbcType=REAL},
      </if>
      <if test="terrain != null">
        terrain = #{terrain,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        voltage = #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="datetimeMonth != null">
        datetime_month = #{datetimeMonth,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=DATE},
      </if>
      <if test="lineLength != null">
        line_length = #{lineLength,jdbcType=REAL},
      </if>
    </set>
    where line_id = #{lineId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.po.LineDetails">
    update line_details
    set line_name = #{lineName,jdbcType=VARCHAR},
      tower_name = #{towerName,jdbcType=VARCHAR},
      tower_id = #{towerId,jdbcType=VARCHAR},
      parentregion = #{parentregion,jdbcType=VARCHAR},
      em_id = #{emId,jdbcType=INTEGER},
      pre_id = #{preId,jdbcType=BIGINT},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      insulation_creep_distance = #{insulationCreepDistance,jdbcType=INTEGER},
      insulation_ton = #{insulationTon,jdbcType=INTEGER},
      insulation_high = #{insulationHigh,jdbcType=INTEGER},
      insulation_bunch_num = #{insulationBunchNum,jdbcType=INTEGER},
      resistance_design_value = #{resistanceDesignValue,jdbcType=INTEGER},
      stationmap_2 = #{stationmap2,jdbcType=REAL},
      stationmap_1 = #{stationmap1,jdbcType=REAL},
      terrain = #{terrain,jdbcType=VARCHAR},
      voltage = #{voltage,jdbcType=VARCHAR},
      datetime_month = #{datetimeMonth,jdbcType=INTEGER},
      datetime = #{datetime,jdbcType=DATE},
      line_length = #{lineLength,jdbcType=REAL}
    where line_id = #{lineId,jdbcType=VARCHAR}
  </update>
</mapper>